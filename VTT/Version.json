{
  "version": "1.2.16",
  "link": "",
  "changelog": {
    "1.0.0": "Initial alpha release",
    "1.1.0": "Initial beta release",
    "1.1.1": "Fixed name being null for new accounts. Fixed a crash with permanent markers when changing map. Fixed chat issues with null strings. Fixed numpad 3 and 9 movement on the Z axis while in 2D mode. Added the ability to pause animated gifs. Last IP/Port pair for server connections are now saved. Added automatic updater.",
    "1.1.2": "The server/client connection is now explicitly keepalive. Added a disconnected screen and a reason for disconnect. Fixed chat message crash. Made the code more robust to disconnects and general network state changes.",
    "1.1.3": "Added keepalive ping packets. Fixed a crash with turn tracker entry comparison. Added more logging for integrations. Added map backups. Added a network profiling/information tool for the server host. Added the ability to ban clients. Chat tooltips for expression rolls now explicitly show all non-nested roll results whenever possible.",
    "1.1.4": "Removed the NulEng dependency. Moved to github for version control and updates. Fixed issues with sun shadows not being in the correct position.",
    "1.1.5": "Added credits. Status effects are now always drawn for object owners. Asset uploading will not crash the app anymore. Fixed %s and other c++ formatting crashing the client in UI text. Fixed UI texture border issues. Fixed crash when changing maps while manipulating objects. Fixed server crash on client-server version mismatch. Fixed previews not generated for image assets.",
    "1.1.6": "Fixed compressed image uploading causing heap corruption. Roll tooltip generator now generates tooltips for compound rolls. Camera snap/default position now includes 2d zoom level. Added network timeout handling.",
    "1.1.7": "Fixed texture compression parameter not applying. Added a d10 option to rolls. Fixed a crash with changing object properties on a different map than other clients.",
    "1.1.8": "Major code refactoring and some optimizations. Particle surface emission is now weighted based on the total triangle area for a mesh, not just the number of triangles. Potentially fixed UI issues by making ImGui calls consistent. Fixed shader recompilation issues.",
    "1.1.9": "Fixed the hotkeys for movement being broken",
    "1.1.10": "Added shader error reporting. Fixed shaders not compiling on intel gpus. Fixed a server-side crash when clients disconnected through the ui. Added missing language entries. Optimized language translate function. Added custom name templates for objects. Added settings to disable particles. Updated dependencies. Added client secret for profile validation. Fixed the server logger being prefixed as client.",
    "1.1.11": "Added server chat backups. Updated ImGui library. Fixed gui inconsistency on right-click menu for objects for non-admins. Added user colors to network panel. Fixed incorrect camera snapping for 2D maps. Moved to modern ImGuiIO. Added tools for explicit camera control for users without MMB. Optimized the rendering pipeline to use UBOs. Changed shadows to use PCF from built-in shadow samplers and added settings to control the quality of the PCF. Added the ability to control billboarding for particle systems. Fixed a crash that could occur with custom nameplate rendering. Made particle mesh surface emission mode account for triangle area, making small triangles less likely to emit particles resulting in uniform particle emission across the mesh. Added support for various unicode characters (approx ~500). Added shader graph editor and custom shaders (not attachable to objects yet).",
    "1.1.12": "Fixed preview generation not using UBOs. Switched both server and client to use SendAsync. Moved from hardware gamma correction to explicit and allowed for its adjustment in the settings.",
    "1.1.13": "Made the updater use a new stream explicitly, may fix the corrupted directory issue. Fixed an issue with the asset browser crashing in rare circumstances. Added settings to enable/disable UBOs for old graphics cards. Padded the UBO to 416 bytes per NVidia driver complaint. Added a sun light color property.",
    "1.1.14": "Changed the turn tracker controls to render entries in a child element. Changed the camera for 2D maps to use less Z depth. Added compression for network packets.",
    "1.2.0": "Object bounding boxes now take model node rotation into account. Fully implemented custom shaders and nodegraph editor. Updated the readme to include a guide on custom shaders. Added a setting to disable custom shaders.",
    "1.2.1": "Added a material index to shadergraph. Added logic shader nodes. Added a shader compilation error handler. Added more various shader graph nodes. Increased the shader depth limit.",
    "1.2.2": "Fixed missing name entries for logic nodes causing a crash. Implemented extra textures for custom shaders (up to 64 custom textures/shader).",
    "1.2.3": "Made deferred rendering more explicit and consistent across drivers. Added a 16bit vs 32bit precision option. Made updater wait for content availability before downloading it. Added the ability to open the latest release download page in browser with ctrl held. Added settings for MSAA and unfocused framerate. Added shadow casting property to objects. Added the info object property to objects. Fixed geometry above Z 1 always being considered shaded with sun disabled. Added the ability to only move logged-in clients to a map if ctrl is held. Reworked the maps ui to use nested folder-like structure. Added a cluster emission mode for particles.",
    "1.2.4": "Fixed shader graph dot product not working. Rolled back VK changes due to AMD auto-including VK headers when compiling shaders, regardless of OpenGL context requested, resulting in an error. Fixed the server sending less than 24 messages to a client if said client couldn't see the message due to message destination mismatch. Added FOV control to the settings. Optimized asset and map loading for the server - assets are multi-threaded now, and have a dedicated server cache, and maps are lazily loaded only on client demand. Fixed custom nameplate textures not scaling to the nameplate UI size. When leaving measurements with rmb, a new measurement is automatically started from the end of the previous one, making it easier to chain measurements. Added an option to make measurements not show their author nor their size, making them a replacement for in-world drawing. Added a polyline (path) measurement tool which measures the total distance for a path. Added an eraser measurement tool which can conditionally erase measurements left by clients (old rmb functionality still present). Reworked how the turn tracker is drawn - removed the background, moved the collapse arrow, textured the turn separator, fixed a bug with it drawing twice, reworked portrait backgrounds, added a portrait frame which indicates the current turn better than the old outline, added particles (disabled by default). Reworked how non-compact bars are drawn - slightly rounded their corners, made the numbers more visible with an outline, centered them and fixed the spacing issue cutting off the lower portion of the numbers. Fixed an issue where the custom nameplate wouldn't leave appropriate room for non-compact bars, making them cutoff. Fixed an issue where portraits for image-based objects would be compressed (the model based ones weren't which resulted in image quality difference). Added a description to roll options in the roll window and fixed the location of the tooltip text in the send image popup window. Added the changelog to the main menu.",
    "1.2.5": "Fixed creating a new map not updating on the server resulting in inability to move to it before restart. Fixed bad scale data causing a matrix error when drawing measurements. Fixed server cache breaking asset updating. Copy-Pasting objects now correctly copies the tint color. Reworked aura rendering, added explicit 2d map proper sorting. Fixed incorrect triangulation for the FOW by implementing Ear Clipping. Added notes to objects and rearranged the ui a bit. Added FOW precision to particles. Added the ability to duplicate particle systems from the asset manager. FOW now hides objects from selection. Added sounds. Objects that are even in scale now snap to the grid better. Made object grid occupancy highlight scale with object's scale. Fixed incorrect nameplate ui size without bars. Turn tracker is now scrollable.",
    "1.2.6": "Rewrote updater to be implemented in the same way as VSCC's updater. Optimized particle update loop. Added a performance monitor (available with -debug). Added an option to disable object drawing (per object) but still allow interactions. Reworked the rendering pipeline from deferred/forward to universal. Added fast lights. Added object name color. Object inspector now colors the preview to the object's tint color.",
    "1.2.7": "Fixed the updater trying to update itself. Fixed a crash that could occur with animated nameplates. Added an option to disable the sound system completely. Updated the ImGui.NET library. Fixed an issue with metallic, roughness and AO values not being written by the universal pipeline for forward-rendered objects. Reworked the asset manager interface. Reworked texture compression to use specific algorithms and allowed the user to select their preferred method of compression. Added the ability to flag images as emissive textures. Added in-app asset deletion. Added an option to rotate the initial particle velocity by container's orientation. Added timestamps for chat messages. Updated the application icon and provided x48, x32 and x16 variants. Added the ability to hide or show the console, and hid it by default. Added a whisper command helper to the chat. Removed the ability to input spacebar in username selection. Added async texture compression and related settings (DXT only).",
    "1.2.8": "Fixed chat crashes with unexpected entries in complex rolls (VSCC integration). Fixed application hanging when a window notification would happen due to bad threading. Error handling no longer modifies stack trace information. Added adjustable aura transparency for non-selected objects. Made aura rendering use a high-definition model and optimized aura and ruler rendering. Made object changes through the properties tab in the up apply to all selected objects when applicable. Fixed a shadergraph issue with the modulo operator on integer types. Added minidumps on application crash if launched with the debug flag. Added the ability to draw in world with the brush tool. Added finer client control for server administrators including the ability to ban clients. Fixed textures being uploaded onto the GPU with 0 width or height in compression algorithm. Made the server map loading look for backup data if the main file wasn't present. Made the default map be marked in the UI with a star symbol. Added a ping sound and made ping notifications more visible when pings are outside of camera's viewport. Switched to a custom texture compression algorithm for better memory management.",
    "1.2.9": "Small fixes. Added emoji reactions. Fixed the drawing eraser erasing drawings even with a different tool selected. Added 3D skeletal animation support.",
    "1.2.10": "Some fixes related to window resolution. 2D Square ruler now renders an outline on the top and bottom to work in 2D. Fixed the animation property not being translated. Added the ability to toggle fullscreen with the f11 key. Added sprite sheet support for particle systems. Fixed the map 2D height property not affecting the camera's clipping planes. Added full sound asset support (mp3 and wav, ogg coming soon), with play and stop functionality. Updated dependencies.",
    "1.2.11": "Fixed the carriage return character being included in translations. Added the ability to copy chat lines with a right-click menu. Added the ability to copy object descriptions in the inspect popup with a right-click menu. Fixed the server always sending full audio data for buffered sound requests. Changed the network usage field in the network tab to a graph over last 20 seconds. Added a command line parameters to specify data storage directories for server and client data. Fixed a crash with buffered sounds caused by the client trying to delete non-existing sound assets. Fixed audio clipping issues when importing non-normalized 32bit floating point sounds. Added vorbis (ogg) audio support.",
    "1.2.12": "Added holiday icons. Added mp3 audio compression (if ffmpeg installed). Added ambient sound feature for maps. Added a music player. Fixed multiple camera issues such as choppy movement, huge position changes on lag and similar. Fixed the client's audio system crash caused by communication with a server when not connected.",
    "1.2.13": "Fixed the music player crash issues related to the name of the track. Optimized texture loading. Added async texture loading. Optimized texture compression. Animated textures now display their animation correctly in all UI elements.",
    "1.2.14": "Fixed a music player crash related to missing asset refs. Fixed an issue with high CPU usage.",
    "1.2.15": "Fixed the asset browser sometimes ignoring drag'n'drop. Changing turn tracker properties (like team names) no longer requires an explicit enter key press. Fixed the ruler eraser tool being drawn outside of measure mode. Rotating object with the alt key held will now try snapping rotation to grid. Object descriptions now feature markdown support. Fixed the trace path tool not adjusting its distance to grid size. Added custom shader support for particles. Fully reworked the custom shader nodegraph editor. Added multiple new emission modes for particles. Added more support for changing properties for all currently selected objects.",
    "1.2.16": "Removed the OpenTK dependency. Reworked the animation container UI. Made the client use the model's simplified raycast bounds whenever possible. Fixed an issue with fog of war status for mouse picker carrying over to non-fow maps. Fixed a shadergraph crash when previewing a custom sampler. Fixed a shadergraph crash when previewing screen position. Added an automatic connection to shadergraph if adding a new node while an output from another node is being dragged. Shadergraph now automatically pans the camera when dragging nodes. Added true borderless window functionality. Fixed crashes related to switching to fullscreen and back. Fixed some UI input issues caused by bad delta time. Fixed drag'n'drop events sometimes not firing. Added client avatars, unique to each server."
  }
}